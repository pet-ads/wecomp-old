jQuery(document).ready(function($){    var dateString = '16-04-2018 00:00',        dateTimeParts = dateString.split(' '),        timeParts = dateTimeParts[1].split(':'),        dateParts = dateTimeParts[0].split('-'),        date;    date = new Date(dateParts[2], parseInt(dateParts[1], 10) - 1, dateParts[0], timeParts[0], timeParts[1]);    var dateString2 = '16-04-2018 17:00',        dateTimeParts2 = dateString2.split(' '),        timeParts2 = dateTimeParts2[1].split(':'),        dateParts2 = dateTimeParts2[0].split('-'),        date2;    date2 = new Date(dateParts2[2], parseInt(dateParts2[1], 10) - 1, dateParts2[0], timeParts2[0], timeParts2[1]);    /*var countdown = setInterval(function () {       if(Date.now()<date){           for(var i = 1; i<8;i++){               if(i != 3 && i != 5){                   $('#subscribe'+i).removeAttr('href');                   document.getElementById('btn'+i).disabled = true;               }           }       }else if(Date.now() < date2){           for(var i = 1; i<8;i++){               $('#subscribe'+i).removeAttr('href');               document.getElementById('btn'+i).disabled = true;           }       }else{           for(var i = 0; i<12;i++){               $('#subscribe'+i).removeAttr('href');               document.getElementById('btn'+i).disabled = true;           }           clearInterval(countdown);       }   },500);*/    $(function() {        $('.show-modal-info').click(function(e) {            e.preventDefault();            var el = $(this),                modal = $('#speakersModal'),                speakerContainer = el.closest('.speaker__profile-info');            modal.modal('toggle')        });        $('a[href*="#"]:not([href="#"])').click(function() {            if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {                var target = $(this.hash);                target = target.length ? target : $('[name=' + this.hash.slice(1) +']');                if (target.length) {                    $('html, body').animate({                        scrollTop: target.offset().top                    }, 1000);                    return false;                }            }        });    });    var modalTriggerBts = $('a[data-type="cd-modal-trigger"]'),        coverLayer = $('.cd-cover-layer');    var duration = 600,        epsilon = (1000 / 60 / duration) / 4,        firstCustomMinaAnimation = bezier(.63,.35,.48,.92, epsilon);    modalTriggerBts.each(function(){        initModal($(this));    });    function initModal(modalTrigger) {        var modalTriggerId =  modalTrigger.attr('id'),            modal = $('.cd-modal[data-modal="'+ modalTriggerId +'"]'),            svgCoverLayer = modal.children('.cd-svg-bg'),            paths = svgCoverLayer.find('path'),            pathsArray = [];        pathsArray[0] = Snap('#'+paths.eq(0).attr('id')),            pathsArray[1] = Snap('#'+paths.eq(1).attr('id')),            pathsArray[2] = Snap('#'+paths.eq(2).attr('id'));        var pathSteps = [];        pathSteps[0] = svgCoverLayer.data('step1');        pathSteps[1] = svgCoverLayer.data('step2');        pathSteps[2] = svgCoverLayer.data('step3');        pathSteps[3] = svgCoverLayer.data('step4');        pathSteps[4] = svgCoverLayer.data('step5');        pathSteps[5] = svgCoverLayer.data('step6');        modalTrigger.on('click', function(event){            event.preventDefault();            modal.addClass('modal-is-visible');            coverLayer.addClass('modal-is-visible');            animateModal(pathsArray, pathSteps, duration, 'open');        });        modal.on('click', '.modal-close', function(event){            event.preventDefault();            modal.removeClass('modal-is-visible');            coverLayer.removeClass('modal-is-visible');            animateModal(pathsArray, pathSteps, duration, 'close');        });    }    function animateModal(paths, pathSteps, duration, animationType) {        var path1 = ( animationType == 'open' ) ? pathSteps[1] : pathSteps[0],            path2 = ( animationType == 'open' ) ? pathSteps[3] : pathSteps[2],            path3 = ( animationType == 'open' ) ? pathSteps[5] : pathSteps[4];        paths[0].animate({'d': path1}, duration, firstCustomMinaAnimation);        paths[1].animate({'d': path2}, duration, firstCustomMinaAnimation);        paths[2].animate({'d': path3}, duration, firstCustomMinaAnimation);    }    function bezier(x1, y1, x2, y2, epsilon){        var curveX = function(t){            var v = 1 - t;            return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;        };        var curveY = function(t){            var v = 1 - t;            return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;        };        var derivativeCurveX = function(t){            var v = 1 - t;            return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (- t * t * t + 2 * v * t) * x2;        };        return function(t){            var x = t, t0, t1, t2, x2, d2, i;            for (t2 = x, i = 0; i < 8; i++){                x2 = curveX(t2) - x;                if (Math.abs(x2) < epsilon) return curveY(t2);                d2 = derivativeCurveX(t2);                if (Math.abs(d2) < 1e-6) break;                t2 = t2 - x2 / d2;            }            t0 = 0, t1 = 1, t2 = x;            if (t2 < t0) return curveY(t0);            if (t2 > t1) return curveY(t1);            while (t0 < t1){                x2 = curveX(t2);                if (Math.abs(x2 - x) < epsilon) return curveY(t2);                if (x > x2) t0 = t2;                else t1 = t2;                t2 = (t1 - t0) * .5 + t0;            }            return curveY(t2);        };    };    var latitude = -21.9700855,        longitude = -47.8785918,        map_zoom = 10;    var is_internetExplorer11= navigator.userAgent.toLowerCase().indexOf('trident') > -1;    var marker_url = ( is_internetExplorer11 ) ? 'assets/img/cd-icon-location.png' : 'assets/img/cd-icon-location.svg';    var	main_color = '#2d313f',        saturation_value= -20,        brightness_value= 5;    var style= [{        elementType: "labels",        stylers: [{saturation: saturation_value}]    },        {            featureType: "poi",            elementType: "labels",            stylers: [{visibility: "on"}]        },        {            featureType: 'road.highway',            elementType: 'labels',            stylers: [{visibility: "off"}]        },        {            featureType: "road.local",            elementType: "labels.icon",            stylers: [{visibility: "off"}]        },        {            featureType: "road.arterial",            elementType: "labels.icon",            stylers: [{visibility: "off"}]        },        {            featureType: "road",            elementType: "geometry.stroke",            stylers: [{visibility: "off"}]        },        {            featureType: "transit",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "poi",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "poi.government",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "poi.attraction",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "poi.business",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "transit",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "transit.station",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "landscape",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "road",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "road.highway",            elementType: "geometry.fill",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        },        {            featureType: "water",            elementType: "geometry",            stylers: [                { hue: main_color },                { visibility: "on" },                { lightness: brightness_value },                { saturation: saturation_value }            ]        }    ];    var map_options = {        center: new google.maps.LatLng(latitude, longitude),        zoom: map_zoom,        panControl: false,        zoomControl: false,        mapTypeControl: false,        streetViewControl: false,        mapTypeId: google.maps.MapTypeId.ROADMAP,        scrollwheel: false,        styles: style    };    var map = new google.maps.Map(document.getElementById('google-container'), map_options);    /*add a custom marker to the map*/    /* Marker IFSP */    var marker = new google.maps.Marker({        position: new google.maps.LatLng(latitude, longitude),        map: map,        visible: true,        icon: marker_url,    });    var iw = new google.maps.InfoWindow({        content: "<a href='https://goo.gl/maps/Lh7UztRupSR2' target='_blank'>IFSP São Carlos</a>"    });    google.maps.event.addListener(marker, "click", function (e) {        iw.open(map, this);    });    /* Marker OnovoLab*/    var marker2 = new google.maps.Marker({        position: new google.maps.LatLng(-22.024065, -47.8943547, 21),        map: map,        visible: true,        icon: marker_url,    });    var iw2 = new google.maps.InfoWindow({        content: "<a href='https://goo.gl/maps/gdktNRGpCd12' target='_blank'>OnovoLab<br>Rua Aquidabam, 1<br>Centro - São Carlos</a>"    });    google.maps.event.addListener(marker2, "click", function (e) {        iw2.open(map, this);    });    function CustomZoomControl(controlDiv, map) {        var controlUIzoomIn= document.getElementById('cd-zoom-in'),            controlUIzoomOut= document.getElementById('cd-zoom-out');        controlDiv.appendChild(controlUIzoomIn);        controlDiv.appendChild(controlUIzoomOut);        google.maps.event.addDomListener(controlUIzoomIn, 'click', function() {            map.setZoom(map.getZoom()+1)        });        google.maps.event.addDomListener(controlUIzoomOut, 'click', function() {            map.setZoom(map.getZoom()-1)        });    }    var zoomControlDiv = document.createElement('div');    var zoomControl = new CustomZoomControl(zoomControlDiv, map);    map.controls[google.maps.ControlPosition.LEFT_TOP].push(zoomControlDiv);    var lastId,        topMenu = $("#mainNav"),        topMenuHeight = topMenu.outerHeight()+1,        menuItems = topMenu.find("a"),        scrollItems = menuItems.map(function(){            var item = $($(this).attr("href"));            if (item.length) { return item; }        });    menuItems.click(function(e){        var href = $(this).attr("href"),            offsetTop = href === "#" ? 0 : $(href).offset().top-topMenuHeight+1;        $('html, body').stop().animate({            scrollTop: offsetTop        }, 850);        e.preventDefault();    });    $(window).scroll(function(){        var fromTop = $(this).scrollTop()+topMenuHeight;        var cur = scrollItems.map(function(){            if ($(this).offset().top < fromTop)                return this;        });        cur = cur[cur.length-1];        var id = cur && cur.length ? cur[0].id : "";        if (lastId !== id) {            lastId = id;            menuItems                .parent().removeClass("selected__link")                .end().filter('a[href="#'+id+'"]').parent().addClass("selected__link");        }    });});$( ".dismiss" ).click( function () {    $('#hamburguer_button')[0].checked = false} );function f() {    $.getJSON("assets/json/shortCourses.json", function (data) {        var shortCourses = document.getElementById("shortCourses");        $.each(data, function (key,val) {            var card ='<div class="col-md-12 col-sm-12">\n' +                '    <div class="card">\n' +                '        <div class="card-content">\n' +                '            <div class="' + val['headerClass'] + '">\n' +                '                <h1 class="card-heading center m-t-20">' + val['title'] + '</h1>\n' +                '                <h2 class="card-speaker center">por ' + val['name'] + '</h2>\n' +                '            </div>\n' +                '            <div class="card-body">\n' +                '                <div class="col-md-9 col-sm-9">\n' +                '                    <h4 class="m-b-10"> Carga horária: ' + val['workLoad'] + '</h4>\n' +                '                    <h5>' + val['date'] + '</h5>\n' +                '                    <hr class="card-hr">\n' +                '                    <p class="card-p">' + val['shortBio'] + '</p>\n' +                '                    <hr class="card-hr">\n' +                '                    <div class="card-body card-hr-height">\n' +                '                        <h5>' + val['vacancy'] + ' vagas</h5>\n' +                '                    </div>\n' +                '                </div>\n' +                '                <div class="text-center col-md-3 col-sm-3">\n' +                '     				 <div>';            $.each(val['photos'], function(key2, val2) {                card += '                    	 <img class="' + val2['photoClass'] + '" src="' + val2['photo'] + '">\n'            });            card +='             </div>\n' +                ' 					 <div>\n' +                ' 					 	 <a href="' + val['companyURL'] + '" target="_blank">\n' +                '						 	<img class="' + val['companyLogoClass'] + '" src="' + val['companyLogo'] + '" height="' + val['companyLogoHeight'] + '">\n' +                '			          	 </a>\n' +                '                	 </div>\n' +                ' 				 </div>' +                '            </div>\n' +                ' 		     <div class="col-md-12 col-sm-12">\n';            if(val['formsLink'] != '') {                card += '                <a href="' + val['formsLink'] + '" target="_blank">\n' +                '					 <button class="center btn btn-primary m-b-20">INCREVER-SE</button>\n' +                '				 </a>\n';            }            card += '            </div>\n' +                '        </div>\n' +                '    </div>\n' +                '</div>\n';            $(card).appendTo(shortCourses);        });    });    $.getJSON("assets/json/recruiting.json", function (data) {        var recruiting = document.getElementById("recruiting");        $.each(data, function (key,value) {            var card = '<div class="card">\n' +            '   <div class="card-content">\n' +            '       <div class="' + value['headerClass'] + '">\n' +            '           <h1 class="card-heading center m-t-20">' + value['title'] + '</h1>\n' +            '       </div>\n' +            '       <div class="card-body">\n' +            '           <h5>' + value['date'] + '</h5>\n' +            '           <hr class="card-hr">\n' +            '           <p>' + value['description'] + '</p>\n' +            '       </div>\n' +            '       <div class="text-center m-b-20">\n' +            '           <img width="' + value['companyLogoWidth'] + '" src="' + value['companyLogo'] + '">\n' +            '       </div>\n';            if (value['formsLink'] !== '') {                card += '<div class="col-md-12">\n' +                    '        <a href="' + value['formsLink'] + '" target="_blank">\n' +                    '            <button class="center btn btn-primary m-b-20">INCREVER-SE</button>\n' +                    '        </a>\n' +                    '    </div>\n';            }            card += '</div>\n' +            '</div>\n';            $(card).appendTo(recruiting);        })    });    $.getJSON("assets/json/talks.json", function (data) {        var talks = document.getElementById("talks");        $.each(data, function (key,value) {            var card = '<div class="card">\n' +            '   <div class="card-content">\n' +            '       <div class="' + value['headerClass'] + '">\n' +            '           <h1 class="card-heading center m-t-20">' + value['title'] + '</h1>\n' +            '                <h2 class="card-speaker center">' + value['name'] + '</h2>\n' +            '       </div>\n' +            '       <div class="card-body">\n' +            '           <h5>' + value['date'] + '</h5>\n' +            '           <hr class="card-hr">\n' +            '           <p>' + value['description'] + '</p>\n' +            '       </div>\n';            if(value['photos'] != ''){                card += '<div class="text-center">\n' +                    '       <div class="col-md-6">\n' +                    '           <h4>Palestrantes</h4>\n';                $.each(value['photos']['invites'], function (index,photo) {                    card += '<div  id="invite"  class="col-md-6">\n' +                        '       <h5>' + photo['name'] + '</h5>' +                        '       <div>' +                        '            <img style="border-radius: 50%;" src="' + photo['photo'] + '" width="' + photo['width'] + '">\n' +                        '       </div>' +                        '       <a target="_blank" href="' + photo['photo'] + '"><i style="font-size: 26px;" class="fa fa-linkedin-square"></i></a>\n' +                        '    </div>\n';                });                card += '</div>\n' +                    '       <div id="organizer" class="col-md-6">\n' +                    '           <h4>Organizadoras</h4>\n';                $.each(value['photos']['organization'], function (index,photo) {                    card += '<div class="col-md-4">\n' +                        '       <h5>' + photo['name'] + '</h5>\n' +                        '       <div>' +                        '            <img style="border-radius: 50%;"  src="' + photo['photo'] + '" width="' + photo['width'] + '">\n' +                        '       </div>' +                        '       <a target="_blank" href="' + photo['photo'] + '"><i style="font-size: 26px;" class="fa fa-linkedin-square"></i></a>\n' +                        '    </div>\n';                });                card += '</div>\n</div>\n'            }            card += '       <div class="text-center m-b-20">\n' +            '           <img width="' + value['companyLogoWidth'] + '" src="' + value['companyLogo'] + '">\n' +            '       </div>\n' +            '<div class="col-md-12">\n';            if (value['formsLink'] != '') {                card += '        <a href="' + value['formsLink'] + '" target="_blank">\n' +                '            <button class="center btn btn-primary m-b-20">INCREVER-SE</button>\n' +                '        </a>\n';            }            card += '    </div>\n' +                '</div>\n' +            '</div>\n';            $(card).appendTo(talks);        })    })}f();